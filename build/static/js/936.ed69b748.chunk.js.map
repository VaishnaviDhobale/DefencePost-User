{"version":3,"file":"static/js/936.ed69b748.chunk.js","mappings":"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","sources":["BaseUrl.jsx","Pages/Data.jsx","components/Navbar.jsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","import { Box, Text } from \"@chakra-ui/react\";\r\nimport { Suspense, lazy, useEffect, useState } from \"react\";\r\nimport { Spinar } from \"../components/Spinar\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport axios from \"axios\";\r\n\r\nconst QuillEditor = lazy(() => import(\"../components/QuillEditor\"));\r\n\r\nfunction Data() {\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [myAmount, setMyAmount] = useState(\"\");\r\n  async function fetchData() {\r\n    try {\r\n      let paymentData = await axios.get(`${baseUrl}/payment/paymentDetails`);\r\n      setPaymentDetails(paymentData.data.details);\r\n      let totalAmount = paymentData?.data?.details?.reduce((acc, item) => {\r\n        return acc + (item.amount * 4) / 100;\r\n      }, 0);\r\n      \r\n      setMyAmount(totalAmount);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching payment data:\", error);\r\n    }\r\n  }\r\n\r\n  // Call the async function\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(paymentDetails);\r\n  return (\r\n    <Box mt={\"70px\"}>\r\n      <Navbar />\r\n      <Box pt={\"50px\"} fontSize={\"30px\"} pb={\"50px\"} fontWeight={\"bold\"}>Total Amount:   <span style={{color : \"green\"}}>{myAmount}</span></Box>\r\n      {paymentDetails?.map((item, index) => {\r\n        // console.log(item.username,\"in map\")\r\n        return (\r\n          <Box pl={\"50px\"}>\r\n            <Box textAlign={\"left\"}>\r\n              <Box><span style={{fontWeight : \"bold\", color : \"teal\",marginRight:\"10px\"}}>User Name:</span> {item.userName}</Box>\r\n              <Box><span style={{fontWeight : \"bold\", color : \"teal\" ,marginRight:\"10px\"}}>Amount</span> {item.amount}</Box>\r\n              <Box><span style={{fontWeight : \"bold\", color : \"teal\" ,marginRight:\"10px\"}}>My Amount</span> {(item.amount * 4)/100}</Box>\r\n              <Box><span style={{fontWeight : \"bold\", color : \"teal\" ,marginRight:\"10px\"}}>Date:</span> {item.date}</Box>\r\n              <Box><span style={{fontWeight : \"bold\", color : \"teal\" ,marginRight:\"10px\"}}>User Email Id:</span> {item.userEmailId}</Box>\r\n              <Box><span style={{fontWeight : \"bold\", color : \"teal\" ,marginRight:\"10px\"}}>CourseId:</span> {item.courseId}</Box>\r\n              <Box><span style={{fontWeight : \"bold\", color : \"teal\" ,marginRight:\"10px\"}}>Course Name:</span> {item.courseName}</Box>\r\n            </Box>\r\n            <hr style={{marginTop : \"30px\",marginBottom : \"30px\"}} />\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\nexport default Data;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;"],"names":["baseUrl","paymentDetails","setPaymentDetails","useState","myAmount","setMyAmount","useEffect","async","_paymentData$data","_paymentData$data$det","paymentData","axios","get","concat","data","details","totalAmount","reduce","acc","item","amount","error","console","fetchData","log","_jsxs","Box","mt","children","_jsx","Navbar","pt","fontSize","pb","fontWeight","style","color","map","index","pl","textAlign","marginRight","userName","date","userEmailId","courseId","courseName","marginTop","marginBottom","_JSON$parse","_JSON$parse2","_JSON$parse3","navigate","useNavigate","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","showCourseDropdown","setShowCourseDropdown","courseData","setCourseData","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","token","setToken","JSON","parse","localStorage","getItem","setUserName","email","setEmail","handleLogout","obj","window","confirm","setItem","stringify","dataPost","uniquePosts","Array","from","Map","post","category","values","err","alert","getPostData","dataCourse","getCourseData","_Fragment","className","display","base","lg","gridTemplateColumns","alignItems","backgroundColor","boxShadow","fontFamily","height","position","width","top","zIndex","paddingRight","NavLink","to","Image","src","logoImg","justifyContent","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","marginLeft","flexDirection","padding","borderRadius","ele","_id","handleCourseMouseEnter","handleCourseMouseLeave","name","Text","h","ml","cursor","onClick","toUpperCase","gap","Button","right","IoMdLogOut","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","textDecoration","DrawerFooter","variant","mr"],"sourceRoot":""}