{"version":3,"file":"static/js/469.f7642409.chunk.js","mappings":"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","sources":["BaseUrl.jsx","Pages/ViewDetails.jsx","components/Navbar.jsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","import {\r\n  Box,\r\n  Button,\r\n  Text,\r\n  useToast,\r\n  Image,\r\n  AccordionItem,\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionIcon,\r\n  AccordionPanel,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Video from \"../components/Video\";\r\nimport { Suspense, lazy, useEffect, useState } from \"react\";\r\nimport { AiOutlineFilePdf } from \"react-icons/ai\";\r\nimport { BiHappy, BiSad, BiSolidLock } from \"react-icons/bi\";\r\nimport pdf from \"../Images/mba.pdf\";\r\nimport axios, { Axios } from \"axios\";\r\nimport Rating from \"react-rating-stars-component\";\r\nimport Img from \"../Images/img.jpg\";\r\nimport { Spinar } from \"../components/Spinar\";\r\nconst CryptoJS = require(\"crypto-js\");\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { BsCurrencyRupee } from \"react-icons/bs\";\r\nimport { FaFolder, FaLock } from \"react-icons/fa\";\r\nimport Navbar from \"../components/Navbar.jsx\";\r\n\r\nconst ViewPdf = lazy(() => import(\"../components/ViewPdf.jsx\"));\r\nconst ViewReview = lazy(() => import(\"../components/ViewReview\"));\r\n\r\nfunction ViewDetails() {\r\n  let token = JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token;\r\n  let userName = JSON.parse(\r\n    localStorage.getItem(\"DefencePostUserDetails\")\r\n  )?.userName;\r\n  let email = JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email;\r\n\r\n  const headers = {\r\n    token: token, // Replace with your actual authorization token\r\n    \"Content-Type\": \"application/json\", // Adjust content type as needed\r\n    // Add any other headers you need\r\n  };\r\n  // css starts\r\n  const inputStyle = {\r\n    border: \"1.5px solid #29a4de\",\r\n    marginBottom: \"20px\",\r\n    outline: \"none\",\r\n    padding: \"10px\",\r\n    width: \"100%\",\r\n    fontSize: \"17.5px\",\r\n    borderRadius: \"10px\",\r\n    color: \"#29a4de\",\r\n  };\r\n\r\n  const button = {\r\n    outline: \"none\",\r\n    padding: \"10px\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#29a4de\",\r\n    cursor: \"pointer\",\r\n    color: \"white\",\r\n    fontSize: \"17.5px\",\r\n  };\r\n  // css ends\r\n  const navigate = useNavigate();\r\n\r\n  let toast = useToast();\r\n\r\n  let [description, setDescription] = useState(true);\r\n  let [preview, setPreview] = useState(false);\r\n  let [review, setReview] = useState(false);\r\n  let [singleCourseData, setSingleCourseData] = useState({});\r\n\r\n  // hide and show add review button\r\n  let [displayReviewButton, setDisplayReviewButton] = useState(false);\r\n\r\n  // rating review\r\n  const [rating, setRating] = useState(0);\r\n  const [reviewData, setReviewData] = useState(\"\");\r\n\r\n  const [allReviewData, setAllReviewData] = useState([]);\r\n\r\n  // coupon\r\n  let [enableCouponFrame, setEnableCouponFrame] = useState(false);\r\n  let [isCoupon, setIsCoupon] = useState(false);\r\n  let [coupon, setCoupon] = useState(\"\");\r\n  let [allCouponData, setAllCouponData] = useState([]);\r\n  let [singleUserCouponDetails, setSingleUserCouponDetails] = useState([]);\r\n  let [buy, setBuy] = useState(false);\r\n  let [isLoading, setIsLoading] = useState(false);\r\n\r\n  let isFound = false;\r\n\r\n  let { courseId } = useParams();\r\n\r\n  let getSingleCourseData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      let dataSingleCourse = await axios.get(`${baseUrl}/course/${courseId}`);\r\n      setSingleCourseData(dataSingleCourse?.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleCourseData();\r\n  }, [window.location.href]);\r\n\r\n  // console.log(window.location.href);\r\n  let handleReviewClick = () => {\r\n    if (!JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token) {\r\n      navigate(\"/login\");\r\n    }\r\n    setDisplayReviewButton(!displayReviewButton);\r\n  };\r\n\r\n  let handlePostReview = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(email);\r\n    const currentDate = new Date();\r\n    // Format the date as desired (e.g., \"MM/DD/YYYY HH:MM AM/PM\")\r\n    const formattedDate = `${currentDate.toLocaleDateString()} ${currentDate.toLocaleTimeString()}`;\r\n    let userReviewData = {\r\n      name: userName,\r\n      review: reviewData,\r\n      rating,\r\n      date: formattedDate,\r\n      courseId,\r\n      email,\r\n    };\r\n\r\n    let postReviewData = async () => {\r\n      try {\r\n        let reviewData = await axios.post(\r\n          `${baseUrl}/review/add`,\r\n          userReviewData\r\n        );\r\n        if (reviewData.status == 200) {\r\n          toast({\r\n            title: \"Review Added\",\r\n            // description: \"Have a great day\",\r\n            status: \"success\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"top\",\r\n          });\r\n          getReviewData();\r\n\r\n          // Reset form fields\r\n          setRating(0);\r\n          setReviewData(\"\");\r\n\r\n          setDisplayReviewButton(!displayReviewButton);\r\n        } else {\r\n          toast({\r\n            title: \"Something is wrong\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"top\",\r\n          });\r\n        }\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n    };\r\n\r\n    postReviewData();\r\n  };\r\n\r\n  let getReviewData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      let reviewsData = await axios.get(`${baseUrl}/review/`);\r\n      let data = reviewsData?.data?.filter((ele, index) => {\r\n        return ele?.courseId == courseId;\r\n      });\r\n      setAllReviewData(data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  //rezorpay payment varification\r\n  const verifyPayment = async (response) => {\r\n    try {\r\n      // Replace with your actual Razorpay key secret\r\n      let keySecretData = await axios.get(`${baseUrl}/payment/getSecretKey`);\r\n      // console.log(keySecretData.data)\r\n      const keySecret = keySecretData?.data;\r\n\r\n      // Concatenate the order ID, payment ID, and your secret key\r\n      const message =\r\n        response?.razorpay_order_id + \"|\" + response?.razorpay_payment_id;\r\n\r\n      // Create HMAC using crypto-js\r\n      const hmac = CryptoJS.HmacSHA256(message, keySecret);\r\n\r\n      // Convert the result to a hexadecimal string\r\n      const signature = CryptoJS.enc.Hex.stringify(hmac);\r\n\r\n      // Verify the signature\r\n      return signature === response?.razorpay_signature;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // Test rezorpay\r\n  let checkoutHandler = async (discountPrice) => {\r\n    if (!JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      try {\r\n        let keyData = await axios.get(`${baseUrl}/payment/getKey`);\r\n        // console.log(keyData.data);\r\n        let data = await axios.post(`${baseUrl}/payment/checkout`, {\r\n          amount: discountPrice || singleCourseData?.sellPrice,\r\n        });\r\n\r\n        const options = {\r\n          key: keyData.data,\r\n          amount: discountPrice || singleCourseData?.sellPrice,\r\n          currency: \"INR\",\r\n          name: \"Defence Post\",\r\n          description: \"Notes\",\r\n          image:\r\n            \"https://media.licdn.com/dms/image/D4D03AQFY0t-eh4N4UQ/profile-displayphoto-shrink_800_800/0/1696600343127?e=1709769600&v=beta&t=6WiaqygVjAbwnn4LeFF7mbv5q7TrZ8U2xR6dxJML2VI\",\r\n          order_id: data?.data?.order?.id,\r\n          handler: async function (response) {\r\n            console.log(response);\r\n            if (verifyPayment(response)) {\r\n              // console.log(response);\r\n              alert(\"Payment Successful!\");\r\n              addDetailAfterPayment(\r\n                response,\r\n                discountPrice || singleCourseData?.sellPrice,\r\n                courseId\r\n              );\r\n              // updateting coupon thing\r\n              {\r\n                if(coupon){\r\n                  let userCouponData = allCouponData.find((obj) => {\r\n                    return obj.coupon === coupon;\r\n                  });\r\n                  \r\n                  // discountPrice &&\r\n                    allCouponData.map(async (ele, index) => {\r\n                      promotorAmount(\r\n                        Number(singleCourseData?.sellPrice),\r\n                        userCouponData?._id,\r\n                        Number(userCouponData?.promoterAmount),\r\n                        Number(userCouponData?.promoterCommission),\r\n                        userCouponData?.studentsCount\r\n                      );\r\n                    });\r\n                 }\r\n              }\r\n              assignCourseToUser();\r\n              navigate(\"/mycourse\");\r\n            } else {\r\n              console.error(\"Payment verification failed!\");\r\n              alert(\"Payment verification failed. Please try again\");\r\n            }\r\n          },\r\n          prefill: {\r\n            name: \"Gaurav Kumar\",\r\n            email: \"gauravsmitawa@gmail.com\",\r\n            contact: \"9671381579\",\r\n          },\r\n          notes: {\r\n            address: \"Razorpay Corporate Office\",\r\n          },\r\n          theme: {\r\n            color: \"#489cdb\",\r\n          },\r\n        };\r\n\r\n        // console.log(options);\r\n\r\n        const razor = new window.Razorpay(options);\r\n        // console.log(razor);\r\n        razor.open();\r\n        return 1;\r\n\r\n\r\n      // new one \r\n      // if(coupon){\r\n      //   let userCouponData = allCouponData.find((obj) => {\r\n      //     return obj.coupon === coupon;\r\n      //   });\r\n\r\n      //   // discountPrice &&\r\n      //     allCouponData.map(async (ele, index) => {\r\n      //       promotorAmount(\r\n      //         Number(singleCourseData?.sellPrice),\r\n      //         userCouponData?._id,\r\n      //         Number(userCouponData?.promoterAmount),\r\n      //         Number(userCouponData?.promoterCommission),\r\n      //         userCouponData?.studentsCount\r\n      //       );\r\n      //     });\r\n      //  }\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n    }\r\n  };\r\n\r\n \r\n  // I have to delete this function after testing and uncomment other onclick thing from buy course. this is post my course\r\n  async function assignCourseToUser() {\r\n    try {\r\n      let myCourseDataObj = {\r\n        CourseName: singleCourseData.name,\r\n        title: singleCourseData.title,\r\n        price: singleCourseData.price,\r\n        discount: singleCourseData.discount,\r\n        sellPrice: singleCourseData.sellPrice,\r\n        thumbnail: singleCourseData.thumbnail,\r\n        previewPDF: singleCourseData.previewPDF,\r\n        previewPDFName: singleCourseData.previewPDFName,\r\n        folders: singleCourseData.folders,\r\n        // coursePDF: singleCourseData.coursePDF,\r\n        // coursePDFName: singleCourseData.coursePDFName,\r\n        courseId: singleCourseData._id,\r\n      };\r\n      // console.log(myCourseDataObj,\"current course\");\r\n      let data = await axios.post(`${baseUrl}/mycourse/add`, myCourseDataObj, {\r\n        headers,\r\n      });\r\n      // console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  let addDetailAfterPayment = async (response, amount, courseId) => {\r\n    // alert(\"data getting add\")\r\n    let detailsObj = {\r\n      razorpay_payment_id: response.razorpay_payment_id,\r\n      razorpay_order_id: response.razorpay_order_id,\r\n      razorpay_signature: response.razorpay_signature,\r\n      amount: amount,\r\n      currency: response.currency,\r\n      status: response.status,\r\n      method: response.method,\r\n      bank: response.bank,\r\n      userName: userName,\r\n      userEmailId: email,\r\n      courseName: singleCourseData.name,\r\n      courseId: courseId,\r\n      coupon : coupon\r\n    };\r\n    try {\r\n      let data = await axios.post(`${baseUrl}/payment/addDetails`, {\r\n        detailsObj,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  let getAllCouponData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      let coupanData = await axios.get(`${baseUrl}/coupon/`);\r\n      setAllCouponData(coupanData?.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // search coupon\r\n  let SearchCoupon = () => {\r\n    allCouponData.map(async (ele, index) => {\r\n      if (ele.coupon == coupon) {\r\n        let dis = (ele.studentDiscount / 100) * singleCourseData.sellPrice;\r\n        // console.log(ele.studentsCount);\r\n        let discountPrice = Number(singleCourseData.sellPrice) - dis;\r\n        isFound = true;\r\n        setEnableCouponFrame(false);\r\n\r\n        // I have to update this on payment done.\r\n        let data = await checkoutHandler(discountPrice);\r\n        // if (data == 1) {\r\n        //   promotorAmount(\r\n        //     Number(singleCourseData.sellPrice),\r\n        //     ele._id,\r\n        //     Number(ele.promoterAmount),\r\n        //     Number(ele.promoterCommission),\r\n        //     ele.studentsCount\r\n        //   );\r\n        // }\r\n      }\r\n    });\r\n\r\n    if (!isFound) {\r\n      toast({\r\n        title: \"Please check your coupon\",\r\n        status: \"error\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n    }\r\n  };\r\n  // update promotor amount function\r\n  async function promotorAmount(\r\n    amount,\r\n    id,\r\n    promoterAmount,\r\n    promoterCommission,\r\n    studentsCount\r\n  ) {\r\n    // alert(\"ok\");\r\n    // console.log(amount, id, promoterAmount, promoterCommission, studentsCount);\r\n    console.log(\"comming here\")\r\n    try {\r\n      \r\n        let test = {\r\n          promoterAmount:\r\n            Number(promoterAmount) + (promoterCommission / 100) * amount,\r\n          studentsCount: studentsCount + 1,\r\n        };\r\n\r\n        // console.log(test,\"Test\")\r\n        let data = await axios.patch(`${baseUrl}/coupon/patch/${id}`, test);\r\n        console.log(data)\r\n      \r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function getMyCourseData() {\r\n    try {\r\n      setIsLoading(true);\r\n      let myCourseData = await axios.get(`${baseUrl}/mycourse/`, { headers });\r\n      // console.log(myCourseData.data.data);\r\n      let buyData = myCourseData?.data?.data?.some(\r\n        (obj) => obj.courseId === courseId\r\n      );\r\n      buyData ? setBuy(true) : setBuy(false);\r\n      // console.log(buyData,buy);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  function extractVideoId(url) {\r\n    if (!url) {\r\n      return null; // Return null or handle the case when the URL is undefined\r\n    }\r\n\r\n    const videoIdMatch = url.match(\r\n      /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/\r\n    );\r\n    return videoIdMatch ? videoIdMatch[1] : null;\r\n  }\r\n\r\n  // convert text into html\r\n  function ComponentWithJSX({ jsxString }) {\r\n    // Use the dangerouslySetInnerHTML property to render the JSX string as JSX.\r\n    const renderJSXStringAsJSX = () => {\r\n      return { __html: jsxString };\r\n    };\r\n\r\n    return (\r\n      <Box>\r\n        <div dangerouslySetInnerHTML={renderJSXStringAsJSX()} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"prevPage\", null);\r\n    getReviewData();\r\n    getAllCouponData();\r\n    getMyCourseData();\r\n  }, []);\r\n\r\n  console.log(singleCourseData, \"current\");\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <Spinar />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Box\r\n        position={\"relative\"}\r\n        bottom={\"50px\"}\r\n        fontFamily={\"Barlow\"}\r\n        mt={{ base: \"20px\", sm: \"120px\" }}\r\n      >\r\n        <Box>\r\n          <Box h={\"500px\"}>\r\n            <iframe\r\n              width=\"100%\"\r\n              height=\"65%\"\r\n              src={`https://www.youtube.com/embed/${extractVideoId(\r\n                singleCourseData.introVideo\r\n              )}`}\r\n              title=\"YouTube video player\"\r\n              frameborder=\"0\"\r\n              allowfullscreen\r\n            ></iframe>\r\n          </Box>\r\n        </Box>\r\n        <Image\r\n          borderRadius={\"5px\"}\r\n          position={\"absolute\"}\r\n          w={{ base: \"150px\", sm: \"320px\" }}\r\n          h={{ base: \"100px\", sm: \"210px\" }}\r\n          top={{ base: \"265px\", sm: \"210px\" }}\r\n          left={{\r\n            base: \"20px\",\r\n            sm: \"60px\",\r\n          }}\r\n          src={singleCourseData.thumbnail}\r\n        ></Image>\r\n\r\n        <Box position={\"relative\"} bottom={\"60px\"}>\r\n          <Box textAlign={\"right\"} marginTop={\"-50px\"} marginRight={\"10px\"}>\r\n            <Button\r\n              backgroundColor={\"#29a4de\"}\r\n              color={\"white\"}\r\n              fontWeight={\"500\"}\r\n              // onClick={tryToAddMyCourseData}\r\n              isDisabled={buy}\r\n              onClick={() => setEnableCouponFrame(!enableCouponFrame)}\r\n            >\r\n              {/* <Link>Buy Course</Link> */}\r\n              {buy ? \"Already Taken\" : \"Buy Course\"}\r\n\r\n              {/* <Link to={\"/mycourse\"}>{buy ? \"Already Taken\" : \"Buy Course\" }</Link> */}\r\n            </Button>\r\n            {enableCouponFrame && (\r\n              <Box\r\n                position={\"absolute\"}\r\n                right={{ base: \"10\", md: \"160px\" }}\r\n                top={{ base: \"60px\", md: \"20px\" }}\r\n                boxShadow={\"rgba(0, 0, 0, 0.24) 0px 3px 8px\"}\r\n                padding={\"20px\"}\r\n                borderTopLeftRadius={\"20px\"}\r\n                borderBottomLeftRadius={\"20px\"}\r\n                borderBottomRightRadius={\"20px\"}\r\n                backgroundColor={\"white\"}\r\n                zIndex={1000}\r\n              >\r\n                <Text\r\n                  onClick={() => {\r\n                    setEnableCouponFrame(false);\r\n                  }}\r\n                  mb={\"15px\"}\r\n                  cursor={\"pointer\"}\r\n                  textAlign={\"right\"}\r\n                  position={\"relative\"}\r\n                >\r\n                  <RxCross2\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: \"-15px\",\r\n                      top: \"-15px\",\r\n                      color: \"white\",\r\n                      backgroundColor: \"red\",\r\n                      fontWeight: \"bold\",\r\n                      borderRadius: \"50%\",\r\n                      padding: \"2px\",\r\n                      fontSize: \"20px\",\r\n                    }}\r\n                  />\r\n                </Text>\r\n                <Box width={\"250px\"} textAlign={\"center\"}>\r\n                  <Box\r\n                    display={isCoupon ? \"block\" : \"flex\"}\r\n                    justifyContent={\"space-around\"}\r\n                    alignItems={\"center\"}\r\n                  >\r\n                    {isCoupon ? (\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Coupon\"\r\n                        style={inputStyle}\r\n                        onChange={(e) => {\r\n                          setCoupon(e.target.value);\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <Text\r\n                        fontSize={\"25px\"}\r\n                        fontWeight={\"bold\"}\r\n                        color={\"green\"}\r\n                        display={\"flex\"}\r\n                        justifyContent={\"center\"}\r\n                        alignItems={\"center\"}\r\n                      >\r\n                        <BsCurrencyRupee\r\n                          style={{\r\n                            color: \"green.300\",\r\n                            fontSize: \"21px\",\r\n                            position: \"relative\",\r\n                            top: \"1px\",\r\n                          }}\r\n                        />{\" \"}\r\n                        {singleCourseData.sellPrice}\r\n                      </Text>\r\n                    )}\r\n                    {!isCoupon && (\r\n                      <Button\r\n                        backgroundColor={\"#29a4de\"}\r\n                        color={\"white\"}\r\n                        fontWeight={\"500\"}\r\n                        onClick={() => {\r\n                          setEnableCouponFrame(false);\r\n                          checkoutHandler();\r\n                        }}\r\n                      >\r\n                        Continue\r\n                      </Button>\r\n                    )}\r\n                    {isCoupon && (\r\n                      <Button\r\n                        backgroundColor={\"#29a4de\"}\r\n                        color={\"white\"}\r\n                        fontWeight={\"500\"}\r\n                        onClick={SearchCoupon}\r\n                      >\r\n                        Add Coupon\r\n                      </Button>\r\n                    )}\r\n                  </Box>\r\n                  <Box mt={\"15px\"}>\r\n                    <Text>\r\n                      {isCoupon ? \"Don't have coupon?\" : \" Do you have coupon?\"}\r\n                      <span\r\n                        style={{\r\n                          color: \"blue\",\r\n                          fontSize: \"15px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setIsCoupon(!isCoupon);\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Click Here\r\n                      </span>\r\n                    </Text>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box margin={{ base: \"20px 20px\", sm: \"30px 60px\" }}>\r\n            {/* Name  */}\r\n            <Box textAlign={\"left\"}>\r\n              <Text fontWeight={\"bold\"} fontSize={\"30px\"}>\r\n                {singleCourseData.title}\r\n              </Text>\r\n\r\n              {/* Price starts */}\r\n              <Box display={\"flex\"} marginTop={\"10px\"} alignItems={\"center\"}>\r\n                <Text fontSize={\"27px\"}>\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"16px\",\r\n                      position: \"relative\",\r\n                      bottom: \"5px\",\r\n                    }}\r\n                  >\r\n                    ₹\r\n                  </span>\r\n                  {singleCourseData.sellPrice} {/* //price */}\r\n                </Text>\r\n                <Text color={\"Gray\"} marginLeft={\"10px\"}>\r\n                  <del>₹{singleCourseData.price}</del> {/* //old price */}\r\n                </Text>\r\n                <Text marginLeft={\"10px\"} color={\"green\"}>\r\n                  ( {singleCourseData.discount}% OFF )\r\n                </Text>\r\n              </Box>\r\n              {/* Price ends */}\r\n            </Box>\r\n\r\n            {/* View Navbar  */}\r\n            <Box\r\n              textAlign={\"left\"}\r\n              marginTop={\"25px\"}\r\n              //   border={\"1px solid red\"}\r\n              width={{\r\n                base: \"100%\",\r\n                lg: \"25%\",\r\n              }}\r\n              display={\"flex\"}\r\n              justifyContent={\"space-between\"}\r\n              paddingBottom={\"10px\"}\r\n              className=\"view\"\r\n              fontWeight={\"bold\"}\r\n              fontSize={\"20px\"}\r\n              gap={{ sm: \"40px\", sm: \"50px\" }}\r\n            >\r\n              <Text\r\n                onClick={() => {\r\n                  setDescription(true);\r\n                  setReview(false);\r\n                  setPreview(false);\r\n                }}\r\n              >\r\n                <Text color={description ? \"#29a4de\" : \"black\"}>\r\n                  Description\r\n                </Text>\r\n              </Text>\r\n              <Text\r\n                color={preview ? \"#29a4de\" : \"black\"}\r\n                onClick={() => {\r\n                  setPreview(true);\r\n                  setReview(false);\r\n                  setDescription(false);\r\n                }}\r\n              >\r\n                Preview\r\n              </Text>\r\n              <Text\r\n                color={review ? \"#29a4de\" : \"black\"}\r\n                onClick={() => {\r\n                  setReview(true);\r\n                  setDescription(false);\r\n                  setPreview(false);\r\n                }}\r\n              >\r\n                Feedback\r\n              </Text>\r\n            </Box>\r\n            <hr style={{ marginBottom: \"40px\" }} />\r\n\r\n            <Box marginBottom={\"50px\"}>\r\n              {description && (\r\n                <Box>\r\n                  {\" \"}\r\n                  {/* <Text fontSize={\"35px\"} fontWeight={\"bold\"}>\r\n                    {\" \"}\r\n                    Description\r\n                  </Text> */}\r\n                  <Text textAlign={\"left\"} marginTop={\"20px\"}>\r\n                    {/* {singleCourseData.description} */}\r\n                    <h3>\r\n                      <ComponentWithJSX\r\n                        jsxString={singleCourseData?.description}\r\n                      />\r\n                    </h3>\r\n                  </Text>\r\n                </Box>\r\n              )}\r\n\r\n              {preview && (\r\n                <Box>\r\n                  {singleCourseData?.previewPDF?.map((ele, index) => {\r\n                    return (\r\n                      <Suspense fallback={<Spinar />}>\r\n                        <ViewPdf\r\n                          link={ele}\r\n                          name={singleCourseData.name}\r\n                          tag=\"free\"\r\n                          courseName={singleCourseData.previewPDFName[index]}\r\n                        />\r\n                      </Suspense>\r\n                    );\r\n                  })}\r\n\r\n                  {/* This is for paid  */}\r\n                  <Link to={buy && `/mycourse`}>\r\n                    <Box mt={\"-21px\"}>\r\n                      <Accordion allowToggle>\r\n                        {singleCourseData?.folders?.map((ele, eleIndex) => {\r\n                          return (\r\n                            <AccordionItem key={eleIndex}>\r\n                              <h2>\r\n                                <AccordionButton>\r\n                                  <Box\r\n                                    as=\"span\"\r\n                                    flex=\"1\"\r\n                                    textAlign=\"left\"\r\n                                    display={\"flex\"}\r\n                                    gap={\"20px\"}\r\n                                    alignItems={\"center\"}\r\n                                    marginBottom={\"20px\"}\r\n                                    position={\"relative\"}\r\n                                    borderBottom=\"none\"\r\n                                  >\r\n                                    <FaFolder\r\n                                      style={{\r\n                                        color: \"#F8D775\",\r\n                                        fontSize: \"40px\",\r\n                                      }}\r\n                                    />\r\n                                    <Text fontSize={\"20px\"}> {ele?.name}</Text>\r\n                                  </Box>\r\n                                  <AccordionIcon />\r\n                                </AccordionButton>\r\n                              </h2>\r\n                              <AccordionPanel pb={4}>\r\n                                {ele?.contents?.map((content, index) => {\r\n                                  return (\r\n                                    <Box\r\n                                      // display={\"flex\"}\r\n                                      gap={\"20px\"}\r\n                                      alignItems={\"center\"}\r\n                                      marginBottom={\"20px\"}\r\n                                      position={\"relative\"}\r\n                                      key={index}\r\n                                    >\r\n                                      <Suspense fallback={<Spinar />}>\r\n                                        <ViewPdf\r\n                                          link={ele}\r\n                                          name={singleCourseData.name}\r\n                                          tag=\"paid\"\r\n                                          courseName={content?.coursePDFName}\r\n                                        />\r\n                                      </Suspense>\r\n                                    </Box>\r\n                                  );\r\n                                })}\r\n                              </AccordionPanel>\r\n                            </AccordionItem>\r\n                          );\r\n                        })}\r\n                      </Accordion>\r\n                    </Box>\r\n                  </Link>\r\n                </Box>\r\n              )}\r\n\r\n              {review && (\r\n                <Box>\r\n                  <Button\r\n                    marginBottom={\"30px\"}\r\n                    backgroundColor={\"#29a4de\"}\r\n                    color={\"white\"}\r\n                    fontWeight={\"500\"}\r\n                    onClick={handleReviewClick}\r\n                  >\r\n                    {displayReviewButton ? \"Hide Feedback\" : \"Add Feedback\"}\r\n                  </Button>\r\n                  {displayReviewButton && (\r\n                    <Box\r\n                      margin={\"auto\"}\r\n                      width={{ base: \"100%\", sm: \"100%\", md: \"60%\", lg: \"40%\" }}\r\n                      mb={\"0p8x\"}\r\n                    >\r\n                      <form onSubmit={handlePostReview}>\r\n                        {/* Star rating component */}\r\n                        <Box\r\n                          textAlign={\"left\"}\r\n                          boxShadow=\"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\"\r\n                          padding={\"20px\"}\r\n                          backgroundColor={\"#e7e8ea\"}\r\n                          borderRadius={\"10px\"}\r\n                        >\r\n                          <Text\r\n                            fontSize={\"20px\"}\r\n                            fontWeight={\"bold\"}\r\n                            marginBottom={\"20px\"}\r\n                          >\r\n                            Give Your Feedback\r\n                          </Text>\r\n                          <Box\r\n                            display={\"flex\"}\r\n                            gap={\"20px\"}\r\n                            alignItems={\"center\"}\r\n                          >\r\n                            <Box>\r\n                              <BiSad\r\n                                fontSize={\"25px\"}\r\n                                style={{ marginLeft: \"3px\" }}\r\n                              />\r\n                              <Text>Poor</Text>\r\n                            </Box>\r\n                            <Box\r\n                              // width={\"250px\"}\r\n                              // m={\"auto\"}\r\n                              display={\"flex\"}\r\n                              alignItems={\"center\"}\r\n                              gap={\"20px\"}\r\n                              // border={\"1px solid red\"}\r\n                            >\r\n                              <Rating\r\n                                count={5} // Number of stars\r\n                                value={rating} // Current rating value\r\n                                onChange={(newRating) => setRating(newRating)} // Handle rating change\r\n                                size={45} // Size of the stars\r\n                                activeColor=\"#daa520\" // Color of the active (filled) stars\r\n                                inactiveColor=\"#c0bebf\" // Color of the inactive (empty) stars\r\n                                fontSize=\"20px\"\r\n                              />\r\n                            </Box>\r\n                            <Box>\r\n                              <BiHappy\r\n                                fontSize={\"25px\"}\r\n                                style={{ marginLeft: \"3px\" }}\r\n                              />\r\n                              <Text>Best</Text>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n\r\n                        {/* textarea  */}\r\n                        <Box\r\n                          boxShadow=\"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\"\r\n                          padding={\"20px\"}\r\n                          borderRadius={\"10px\"}\r\n                          mt={\"15px\"}\r\n                          backgroundColor={\"#e7e8ea\"}\r\n                        >\r\n                          <Text\r\n                            fontSize={\"20px\"}\r\n                            fontWeight={\"bold\"}\r\n                            textAlign={\"left\"}\r\n                            // marginBottom={\"20px\"}\r\n                          >\r\n                            Write-Up\r\n                          </Text>\r\n\r\n                          <textarea\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            rows=\"3\"\r\n                            value={reviewData}\r\n                            onChange={(e) => setReviewData(e.target.value)}\r\n                            placeholder=\"Write your review...\"\r\n                            style={{\r\n                              // border: \"1px solid gray\",\r\n                              boxShadow:\r\n                                \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\",\r\n                              outline: \"none\",\r\n                              padding: \"20px\",\r\n                              fontSize: \"19px\",\r\n                              width: \"100%\",\r\n                              borderRadius: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                            required\r\n                          ></textarea>\r\n                        </Box>\r\n                        <br />\r\n                        <input\r\n                          type=\"submit\"\r\n                          value=\"Submit Feedback\"\r\n                          style={{\r\n                            padding: \"8px 20px\",\r\n                            backgroundColor: \"#29a4de\",\r\n                            color: \"white\",\r\n                            borderRadius: \"5px\",\r\n                            cursor: \"pointer\",\r\n                            // marginTop: \"10px\",\r\n                            marginBottom: \"50px\",\r\n                          }}\r\n                        />\r\n                      </form>\r\n                    </Box>\r\n                  )}\r\n                  <Box>\r\n                    {allReviewData.reverse().map((ele, index) => {\r\n                      return (\r\n                        <Suspense fallback={<Spinar />}>\r\n                          <ViewReview data={ele} />\r\n                        </Suspense>\r\n                      );\r\n                    })}\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewDetails;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;"],"names":["baseUrl","CryptoJS","require","ViewPdf","lazy","ViewReview","_JSON$parse","_JSON$parse2","_JSON$parse3","_singleCourseData$pre","_singleCourseData$fol","token","JSON","parse","localStorage","getItem","userName","email","headers","navigate","useNavigate","toast","useToast","description","setDescription","useState","preview","setPreview","review","setReview","singleCourseData","setSingleCourseData","displayReviewButton","setDisplayReviewButton","rating","setRating","reviewData","setReviewData","allReviewData","setAllReviewData","enableCouponFrame","setEnableCouponFrame","isCoupon","setIsCoupon","coupon","setCoupon","allCouponData","setAllCouponData","singleUserCouponDetails","setSingleUserCouponDetails","buy","setBuy","isLoading","setIsLoading","isFound","courseId","useParams","useEffect","async","dataSingleCourse","axios","get","concat","data","err","alert","getSingleCourseData","window","location","href","getReviewData","_reviewsData$data","reviewsData","filter","ele","index","checkoutHandler","_JSON$parse5","_data$data","_data$data$order","keyData","post","amount","discountPrice","sellPrice","options","key","currency","name","image","order_id","order","id","handler","response","console","log","keySecretData","keySecret","message","razorpay_order_id","razorpay_payment_id","hmac","HmacSHA256","enc","Hex","stringify","razorpay_signature","verifyPayment","addDetailAfterPayment","userCouponData","find","obj","map","promoterAmount","promoterCommission","studentsCount","test","Number","patch","promotorAmount","_id","myCourseDataObj","CourseName","title","price","discount","thumbnail","previewPDF","previewPDFName","folders","assignCourseToUser","error","prefill","contact","notes","address","theme","color","Razorpay","open","detailsObj","status","method","bank","userEmailId","courseName","ComponentWithJSX","_ref","jsxString","_jsx","Box","children","dangerouslySetInnerHTML","__html","sessionStorage","setItem","coupanData","getAllCouponData","_myCourseData$data","_myCourseData$data$da","myCourseData","buyData","some","getMyCourseData","_Fragment","Spinar","_jsxs","Navbar","position","bottom","fontFamily","mt","base","sm","h","width","height","src","url","videoIdMatch","match","extractVideoId","introVideo","frameborder","allowfullscreen","Image","borderRadius","w","top","left","textAlign","marginTop","marginRight","Button","backgroundColor","fontWeight","isDisabled","onClick","right","md","boxShadow","padding","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","zIndex","Text","mb","cursor","RxCross2","style","fontSize","display","justifyContent","alignItems","required","type","placeholder","border","marginBottom","outline","onChange","e","target","value","BsCurrencyRupee","SearchCoupon","dis","studentDiscount","duration","isClosable","margin","marginLeft","lg","paddingBottom","className","gap","Suspense","fallback","link","tag","Link","to","Accordion","allowToggle","eleIndex","_ele$contents","AccordionItem","AccordionButton","as","flex","borderBottom","FaFolder","AccordionIcon","AccordionPanel","pb","contents","content","coursePDFName","handleReviewClick","_JSON$parse4","onSubmit","preventDefault","currentDate","Date","formattedDate","toLocaleDateString","toLocaleTimeString","userReviewData","date","postReviewData","BiSad","Rating","count","newRating","size","activeColor","inactiveColor","BiHappy","rows","reverse","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","showCourseDropdown","setShowCourseDropdown","courseData","setCourseData","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","setToken","setUserName","setEmail","handleLogout","confirm","dataPost","uniquePosts","Array","from","Map","category","values","getPostData","dataCourse","getCourseData","gridTemplateColumns","paddingRight","NavLink","logoImg","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","flexDirection","handleCourseMouseEnter","handleCourseMouseLeave","ml","toUpperCase","IoMdLogOut","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","textDecoration","DrawerFooter","variant","mr"],"sourceRoot":""}